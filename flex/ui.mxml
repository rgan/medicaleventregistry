<?xml version="1.0" encoding="utf-8"?>

<mx:Application
        xmlns:mx="http://www.adobe.com/2006/mxml"
        horizontalAlign="center" verticalAlign="middle"
        >
    <mx:Script>
            <![CDATA[
                import mx.controls.Alert;
        import mx.rpc.events.ResultEvent;
        import mx.rpc.events.FaultEvent;
        import mx.collections.ArrayCollection;
        import mx.rpc.events.ResultEvent;
        import mx.utils.*;

        import com.google.maps.LatLng;
        import com.google.maps.Map;
        import com.google.maps.MapEvent;
        import com.google.maps.MapMouseEvent;
        import com.google.maps.MapType;
        import com.google.maps.controls.ZoomControl;
        import com.google.maps.controls.PositionControl;
        import com.adobe.serialization.json.JSON;

        import mx.managers.CursorManager;
        import mx.events.DropdownEvent;
        import mx.events.ItemClickEvent;

        import mx.utils.Base64Encoder;
        import mx.rpc.http.mxml.HTTPService;

        private var user:String;
        private var pwd:String;

        private function addAuthHeader(service:HTTPService):void {
            var encoder:Base64Encoder = new Base64Encoder();
            encoder.insertNewLines = false;
            encoder.encode(user + ":" + pwd);

            service.headers = {Authorization:"Basic " + encoder.toString()};
        }


        private function addNewEventType():void {
            addAuthHeader(eventServiceAdd);
            eventTypeServiceAdd.send();
        }

        private function addMedicalEvent():void {
            addAuthHeader(eventServiceAdd);
            eventServiceAdd.send();
        }

        private function addUser():void {
            CursorManager.setBusyCursor();
            userService.send();
        }

        private function logout():void {
            user = "";
            pwd = "";
            loggedIn.text = "";
            addEvent.enabled = false;
            search.enabled = false;
        }

        private function handleAuthServiceResult(event:ResultEvent):void {
            CursorManager.removeBusyCursor();
            user = username.text;
            pwd = password.text;
            username.text = "";
            password.text = "";
            loggedIn.text = "Welcome, " + user + " ";
            addEvent.enabled = true;
            search.enabled = true;
        }

        private function handleAuthServiceFault(event:FaultEvent):void {
            CursorManager.removeBusyCursor();
            password.text = "";
            Alert.show("Login failed");
        }

        private function handleUserServiceResult(event:ResultEvent):void {
            CursorManager.removeBusyCursor();
            register_username.text = "";
            register_password.text = "";
            register_email.text = "";
        }

        private function loginUser():void {
            CursorManager.setBusyCursor();
            authService.send();
        }

        private function doSearch():void {
            CursorManager.setBusyCursor();
            eventsSearchService.url = "rest/events/" + searchEventType.selectedItem.data
                    + "/" + encodeURIComponent(dateFrom.text) + "/" + encodeURIComponent(dateTo.text);
            addAuthHeader(eventsSearchService);
            eventsSearchService.send();
        }

        private function showSearchResults(event:ResultEvent):void
        {
            var rawData:String = String(event.result);
            if (rawData == "") {
                CursorManager.removeBusyCursor();
                return;
            }
            var arr:Array = (JSON.decode(rawData) as Array);

            var searchResults:ArrayCollection = new ArrayCollection(arr)
            searchResultsGrid.dataProvider = searchResults;
            CursorManager.removeBusyCursor();
        }

        private function handleEventServiceAddResult(event:ResultEvent):void
        {
            lat.text = "";
            lon.text = "";
            dateFieldEntry.text = "";
            eventTypeCombo.selectedIndex = -1;
            who.text = "";
        }

        var eventTypesCache:ArrayCollection;

        private function handleEventTypesResult(event:ResultEvent):void
        {
            var rawData:String = String(event.result);
            var arr:Array = (JSON.decode(rawData) as Array);
            eventTypesCache = new ArrayCollection(arr)
            initEventTypeCombo();
            initSearchEventTypeCombo();
            CursorManager.removeBusyCursor();
        }

        private function showError(event:FaultEvent):void {
            CursorManager.removeBusyCursor();
            // Handle operation fault.
            Alert.show(event.fault.faultString, "Error");
        }

        private function initEventTypesCombos():void {
            CursorManager.setBusyCursor();
            eventTypeService.send();
        }

        private function updateEventTypesCache(event:ResultEvent):void
        {
            initEventTypesCombos();
        }

        private function initEventTypeCombo():void {
            if (eventTypeCombo != null) {
                eventTypeCombo.dataProvider = eventTypesCache;
            }
        }

        private function initSearchEventTypeCombo():void {
            if (searchEventType != null) {
                searchEventType.dataProvider = eventTypesCache;
            }
        }

        private var mapMode = 0;

        private function onMapClick(event:MapMouseEvent):void {
            if (mapMode == 1) {
                lat.text = event.latLng.lat().toString();
                lon.text = event.latLng.lng().toString();
            }
        }

        private function handleMapButtonBarClick(event:ItemClickEvent):void {
            if (event.index == 0) {
                mapMode = 0;
                this.map.setCenter(new LatLng(0, 0), 1, MapType.NORMAL_MAP_TYPE);
            }

            if (event.index == 1) {
                mapMode = 1;
            }
        }

        private function onMapReady(event:Event):void {
            this.map.setCenter(new LatLng(0, 0), 1, MapType.NORMAL_MAP_TYPE);
            this.map.addControl(new ZoomControl());
            this.map.addControl(new PositionControl());
            this.map.addEventListener(MapMouseEvent.CLICK, onMapClick);
        }

      ]]>
    </mx:Script>

    <mx:HTTPService id="eventTypeService" url="rest/types/"
                    useProxy="false"
                    method="GET"
                    resultFormat="text"
                    fault="showError(event)"
                    result="handleEventTypesResult(event)">
    </mx:HTTPService>

    <mx:HTTPService id="eventTypeServiceAdd"
                    url="rest/types/{typeName.text}"
                    useProxy="false"
                    method="POST"
                    resultFormat="text"
                    fault="showError(event)"
                    result="updateEventTypesCache(event)">
        <mx:request xmlns="">
            <name>{typeName.text}</name>
        </mx:request>
    </mx:HTTPService>

    <mx:HTTPService id="eventsSearchService"
                    useProxy="false"
                    method="POST" 
                    resultFormat="text"
                    fault="showError(event)"
                    result="showSearchResults(event)">
        <mx:request xmlns="">
            <dummy>dummy</dummy>
        </mx:request>
    </mx:HTTPService>

    <mx:HTTPService id="eventServiceAdd" url="rest/events/"
                    useProxy="false"
                    method="POST"
                    resultFormat="text"
                    fault="showError(event)"
                    result="handleEventServiceAddResult(event)">
        <mx:request xmlns="">
            <name>{who.text}</name>
            <lat>{lat.text}</lat>
            <lon>{lon.text}</lon>
            <dateReported>{dateFieldEntry.text}</dateReported>
            <eventTypeId>{eventTypeCombo.selectedItem.data}</eventTypeId>
        </mx:request>
    </mx:HTTPService>

    <mx:HTTPService id="userService" url="rest/users/"
                    useProxy="false"
                    method="POST"
                    resultFormat="text"
                    fault="showError(event)"
                    result="handleUserServiceResult(event)">
        <mx:request xmlns="">
            <username>{register_username.text}</username>
            <password>{register_password.text}</password>
            <email>{register_email.text}</email>
        </mx:request>
    </mx:HTTPService>

    <mx:HTTPService id="authService" url="rest/sessions/"
                    useProxy="false"
                    method="POST"
                    resultFormat="text"
                    fault="handleAuthServiceFault(event)"
                    result="handleAuthServiceResult(event)">
        <mx:request xmlns="">
            <username>{username.text}</username>
            <password>{password.text}</password>
        </mx:request>
    </mx:HTTPService>

    <mx:ApplicationControlBar dock="true">
        <mx:Label
                text="Global Sapiensis"
                fontFamily="Verdana" fontWeight="bold" fontSize="12"
                />
        <mx:Spacer width="100%"/>
        <mx:Label id="loggedIn" text=""/>
        <mx:Button label="Log out" click="logout()"/>
    </mx:ApplicationControlBar>

    <mx:HBox height="500" width="800">
        <mx:VBox height="500" width="315">
            <mx:LinkBar dataProvider="{myViewStack}" borderStyle="solid"/>

            <mx:ViewStack id="myViewStack"
                          borderStyle="solid" height="400" width="100%">

                <mx:Canvas id="register" label="Login">
                    <mx:VBox>
                        <mx:Form>

                            <mx:FormHeading label="Login"/>

                            <mx:FormItem label="Username:">
                                <mx:TextInput id="username"/>
                            </mx:FormItem>

                            <mx:FormItem label="Password:">
                                <mx:TextInput id="password" displayAsPassword="true"/>
                            </mx:FormItem>

                            <mx:FormItem>
                                <mx:Button id="submitLogin"
                                           label="Login" click="loginUser()"/>
                            </mx:FormItem>

                        </mx:Form>
                        <mx:Label text="If you don't have a login, register below." fontWeight="bold"/>
                        <mx:Form>

                            <mx:FormHeading label="Register"/>

                            <mx:FormItem label="Username:">
                                <mx:TextInput id="register_username"/>
                            </mx:FormItem>

                            <mx:FormItem label="Email:">
                                <mx:TextInput id="register_email"/>
                            </mx:FormItem>

                            <mx:FormItem label="Password:">
                                <mx:TextInput id="register_password" displayAsPassword="true"/>
                            </mx:FormItem>

                            <mx:FormItem>
                                <mx:Button id="submitAddUser"
                                           label="Register" click="addUser()"/>
                            </mx:FormItem>

                        </mx:Form>

                    </mx:VBox>

                </mx:Canvas>

                <mx:Canvas id="addEvent" label="Add Event" enabled="false">
                    <mx:VBox>
                        <mx:Form>

                            <mx:FormHeading label="Add a medical event"/>

                            <mx:FormItem label="Who:">
                                <mx:TextInput id="who"/>
                            </mx:FormItem>

                            <mx:FormItem label="Date:">
                                <mx:DateField id="dateFieldEntry"
                                              yearNavigationEnabled="true"/>
                            </mx:FormItem>

                            <mx:FormItem label="Lat:">
                                <mx:TextInput id="lat"/>
                            </mx:FormItem>

                            <mx:FormItem label="Lon:">
                                <mx:TextInput id="lon"/>
                            </mx:FormItem>

                            <mx:FormItem label="Event Type:">
                                <mx:ComboBox id="eventTypeCombo"
                                             creationComplete="initEventTypesCombos()"
                                        >
                                </mx:ComboBox>
                            </mx:FormItem>

                            <mx:FormItem>
                                <mx:Button id="submitAddEvent"
                                           label="Add" click="addMedicalEvent()"/>
                            </mx:FormItem>

                        </mx:Form>
                        <mx:Form>
                            <mx:FormHeading label="Add an event type"/>

                            <mx:FormItem label="Name:">
                                <mx:TextInput id="typeName"/>
                            </mx:FormItem>

                            <mx:FormItem>
                                <mx:Button id="submitAddType"
                                           label="Add" click="addNewEventType()"/>
                            </mx:FormItem>

                        </mx:Form>
                    </mx:VBox>
                </mx:Canvas>

                <mx:Canvas id="search" label="Search" width="100%" enabled="false">
                    <mx:VBox width="100%">
                        <mx:Form>

                            <mx:FormHeading label="Search"/>

                            <mx:FormItem label="Event Type:">
                                <mx:ComboBox id="searchEventType"
                                             creationComplete="initEventTypesCombos()">
                                </mx:ComboBox>
                            </mx:FormItem>

                            <mx:FormItem label="Date from:">
                                <mx:DateField id="dateFrom"
                                              yearNavigationEnabled="true"/>
                            </mx:FormItem>

                            <mx:FormItem label="Date to:">
                                <mx:DateField id="dateTo" yearNavigationEnabled="true"/>
                            </mx:FormItem>

                            <mx:FormItem>
                                <mx:Button id="submitSearch"
                                           label="Search"
                                           click="doSearch()"/>
                            </mx:FormItem>

                        </mx:Form>

                        <mx:Label text="Search Results" fontWeight="bold"/>
                        <mx:DataGrid id="searchResultsGrid"
                                     width="100%"
                                >
                            <mx:columns>
                                <mx:DataGridColumn id="whoCol"
                                                   dataField="who"
                                                   headerText="Name"/>
                                <mx:DataGridColumn id="whenCol"
                                                   dataField="when"
                                                   headerText="Date"
                                                   width="60"/>
                                <mx:DataGridColumn id="latCol"
                                                   dataField="lat"
                                                   headerText="Lat"
                                                   width="60"/>
                                <mx:DataGridColumn id="lonCol"
                                                   dataField="lon"
                                                   headerText="Lon"
                                                   width="60"/>
                            </mx:columns>

                        </mx:DataGrid>
                    </mx:VBox>
                </mx:Canvas>


            </mx:ViewStack>
        </mx:VBox>
        <mx:Canvas id="mapPanel" label="Map">
            <mx:VBox>
                <mx:ToggleButtonBar
                        borderStyle="solid"
                        horizontalGap="5"
                        itemClick="handleMapButtonBarClick(event);"
                        toggleOnClick="true"
                        selectedIndex="-1">

                    <mx:dataProvider>
                        <mx:String>Full Extent</mx:String>
                        <mx:String>Place Marker</mx:String>
                    </mx:dataProvider>

                </mx:ToggleButtonBar>


                <maps:Map xmlns:maps="com.google.maps.*" id="map" mapevent_mapready="onMapReady(event)"
                          height="400" width="485"
                          key="ABQIAAAACdRRXK7NXPnq1up2FKcnMBThqlnqxp5lhEyBZcw9hnxivHI88BRpzBQD5FyEFkt0hm7DLyj8jR0Wdg"/>
            </mx:VBox>
        </mx:Canvas>
    </mx:HBox>

</mx:Application>

